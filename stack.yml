AWSTemplateFormatVersion: '2010-09-09'
Description: Stack for FastAPI + Vite app with t4g.micro EC2 and Route53 domain

Parameters:
  KeyPairName:
    Type: String
    Description: Name of EC2 KeyPair for SSH access
  HostedZoneId:
    Type: String
    Description: ID of the Route53 Hosted Zone
  BackendDomainName:
    Type: String
    Description: Domain name for FastAPI
  FrontendDomainName:
    Type: String
    Description: Domain name for Vite+React
  BucketDomainName:
    Type: String
    Description: Domain name of the S3 bucket
  ACMCertificateArn:
    Type: String
    Description: The ACM cert ARN for CloudFront
  VPC:
    Type: String
    Description: VPC ID

Resources:
  BackendInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP, HTTPS, and SSH
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  BackendRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: backend-parameter-access-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowParameterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: 'arn:aws:ssm:us-east-1:150685103879:parameter/KEY_ENCRYPTION_SEED'

  BackendInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BackendRole

  BackendElasticIP:
    Type: AWS::EC2::EIP

  BackendInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t4g.micro
      KeyName: !Ref KeyPairName
      ImageId: ami-050499786ebf55a6a # AWS Ubuntu 22.04 LTS
      IamInstanceProfile: !Ref BackendInstanceProfile
      SecurityGroupIds:
        - !Ref BackendInstanceSecurityGroup
      Tags:
        - Key: Name
          Value: FastAPI-Demo
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          su - ubuntu <<'EOF'
          cd /home/ubuntu
          git clone https://github.com/crnorthc/resumai.git resumai
          cd resumai
          git checkout demo
          chmod +x setup_backend.sh
          sh setup_backend.sh
          EOF

  IPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref BackendInstance
      EIP: !Ref BackendElasticIP

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref BackendDomainName
      Type: A
      TTL: 300
      ResourceRecords:
        - !Ref BackendElasticIP

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Access identity for CloudFront to access S3

  FrontendCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !Ref FrontendDomainName
        ViewerCertificate:
          AcmCertificateArn: !Ref ACMCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Origins:
          - DomainName: !Ref BucketDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOAI}'
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: ['GET', 'HEAD']
          CachedMethods: ['GET', 'HEAD']
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none

  FrontendDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref FrontendDomainName
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt FrontendCloudFrontDistribution.DomainName
